{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nconst RandomizedFileName = ({\n  url,\n  output,\n  file_extension,\n  image_format,\n  uuid\n}) => {\n  // check if url has {uuid}\n  let hasUuidPlaceHolder = url.includes('{uuid}');\n  if (hasUuidPlaceHolder) {\n    return url.replace('{uuid}', uuid);\n  }\n  uuid = uuidv4();\n  let fileExtention = '';\n  switch (output) {\n    case 'mp4':\n      fileExtention = '.mp4';\n      break;\n    case 'webm':\n      fileExtention = '.webm';\n      break;\n    case 'mp3':\n      fileExtention = '.mp3';\n      break;\n    case 'repack':\n      if (file_extension) {\n        fileExtention = file_extension;\n      }\n      break;\n    case 'gif':\n      fileExtention = '.gif';\n      break;\n    case 'thumbnail':\n      if (image_format) {\n        fileExtention = `.${image_format}`;\n      } else {\n        fileExtention = '.png';\n      }\n      break;\n    default:\n    // do nothing\n  }\n  return `${url}/${uuid}${fileExtention}`;\n};\n_c = RandomizedFileName;\nexport { RandomizedFileName };\nvar _c;\n$RefreshReg$(_c, \"RandomizedFileName\");","map":{"version":3,"names":["v4","uuidv4","RandomizedFileName","url","output","file_extension","image_format","uuid","hasUuidPlaceHolder","includes","replace","fileExtention","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/GITHUB/QENCODE/contentful-mult-upload/src/utils/filenameUtils.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst RandomizedFileName = ({ url, output, file_extension, image_format, uuid }) => {\r\n\r\n    // check if url has {uuid}\r\n    let hasUuidPlaceHolder = url.includes('{uuid}')\r\n    if(hasUuidPlaceHolder){\r\n      return url.replace('{uuid}', uuid);\r\n    }\r\n\r\n    uuid = uuidv4();\r\n\r\n    let fileExtention = ''\r\n\r\n    switch (output) {\r\n      case 'mp4':\r\n        fileExtention = '.mp4'\r\n        break;\r\n      case 'webm':\r\n        fileExtention = '.webm'\r\n        break;\r\n      case 'mp3':\r\n        fileExtention = '.mp3'\r\n        break;        \r\n      case 'repack':\r\n        if(file_extension){\r\n          fileExtention = file_extension\r\n        }        \r\n        break;  \r\n      case 'gif':\r\n        fileExtention = '.gif'\r\n        break;  \r\n      case 'thumbnail':\r\n        if(image_format){\r\n          fileExtention = `.${image_format}`\r\n        }else{\r\n          fileExtention = '.png'\r\n        }        \r\n        break;                               \r\n      default:\r\n        // do nothing\r\n    }\r\n\r\n    return `${url}/${uuid}${fileExtention}`;\r\n};\r\n\r\nexport { RandomizedFileName };\r\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,GAAG;EAAEC,MAAM;EAAEC,cAAc;EAAEC,YAAY;EAAEC;AAAK,CAAC,KAAK;EAEhF;EACA,IAAIC,kBAAkB,GAAGL,GAAG,CAACM,QAAQ,CAAC,QAAQ,CAAC;EAC/C,IAAGD,kBAAkB,EAAC;IACpB,OAAOL,GAAG,CAACO,OAAO,CAAC,QAAQ,EAAEH,IAAI,CAAC;EACpC;EAEAA,IAAI,GAAGN,MAAM,CAAC,CAAC;EAEf,IAAIU,aAAa,GAAG,EAAE;EAEtB,QAAQP,MAAM;IACZ,KAAK,KAAK;MACRO,aAAa,GAAG,MAAM;MACtB;IACF,KAAK,MAAM;MACTA,aAAa,GAAG,OAAO;MACvB;IACF,KAAK,KAAK;MACRA,aAAa,GAAG,MAAM;MACtB;IACF,KAAK,QAAQ;MACX,IAAGN,cAAc,EAAC;QAChBM,aAAa,GAAGN,cAAc;MAChC;MACA;IACF,KAAK,KAAK;MACRM,aAAa,GAAG,MAAM;MACtB;IACF,KAAK,WAAW;MACd,IAAGL,YAAY,EAAC;QACdK,aAAa,GAAI,IAAGL,YAAa,EAAC;MACpC,CAAC,MAAI;QACHK,aAAa,GAAG,MAAM;MACxB;MACA;IACF;IACE;EACJ;EAEA,OAAQ,GAAER,GAAI,IAAGI,IAAK,GAAEI,aAAc,EAAC;AAC3C,CAAC;AAACC,EAAA,GA1CIV,kBAAkB;AA4CxB,SAASA,kBAAkB;AAAG,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}